# Maintainer: Jeremy Huntwork <jhuntwork@lightcubesolutions.com>

pkgname=(s6 s6-dev)
pkgver=2.7.2.2
pkgrel=2
pkgdesc='A small process supervision suite for UNIX.'
arch=(x86_64)
url='http://skarnet.org/software/s6/'
license=(ISC)
groups=(base)
depends=()
makedepends=(skalibs-dev execline-dev)
options=(emptydirs)
changelog=ChangeLog
source=(
    "http://skarnet.org/software/s6/s6-${pkgver}.tar.gz"
    rc.init
    rc.finish
    rc.shutdown
    s6.install
    s6-init
    s6-svscan-crash
    s6-svscan-finish
    s6-svscan-log
    s6-service
    taillog
    tty1-service
)

sha256sums=(
    58dfa7633caff3790e06b5981344ceb03a1cedff4f253e15d79135d9a2ab525f
    0fc11fe9190d6f1046ff51958f5d84fa74c3800262260b7797c55aa11658c5d1
    0999b95f979d004ec0dae779daf80cd4032b6700b98957a2cfe3a75fdb63662e
    33accde3c4e2c4c880e243a00bcaf6ce8b018fc68deea376f7a3d14e239d3eb9
    49677fb3fa4b880a6999be7741c15d21cd9fdd4a35c0bd9b002407e8525aea50
    603258d6e66ed3d62c6d9e19129bcf0bb34b2871fb5826d7f02571bf16de6fd4
    a90dd71977a0a223265ddda7713e8cd798d14d21a3b010c9ba69b8c76c483133
    f3a51757da18c71a936b188f1693bf10179edf5fe54c8964b74435d82b98d1cb
    551527219c85ec06df46c8f54e7c13afc181276ace95135491795457a7eec501
    e923f5cea85c921fd8aac5d923c302efbe245727f1eac0b7e138f46f668eda6f
    6fe869bfaf65ea4528bcb437c8c2d818aae898ea3be9215ae082ce3548e34d08
    538bc61ea2ef419c1e48e683d7b6a52ea45ea5b06ad765bbfa28b79d3953829f
)

install=s6.install


build() {
    cd "${srcdir}/${pkgname}-${pkgver}"
    sed -i 's@#!/bin/sh@#!/bin/bash@' configure
    ./configure \
      --prefix=/ \
      --bindir=/sbin \
      --libexecdir=/lib/s6 \
      --enable-static-libc
    make
}

package_s6() {
    options+=(emptydirs)
    pkgfiles=(
        bin
        etc
        s6
        sbin
        lib/s6
    )
    depends=(execline)

    # Run make install
    cd "${srcdir}/${pkgbase}-${pkgver}"
    make DESTDIR="${pkgdirbase}/dest" install

    # Begin customization
    cd "${pkgdirbase}/dest"
    mv lib/s6/libs6.a lib/

    # Services dir and init
    install -d s6 etc/s6/services/{available,enabled}
    install -m 0750 "${srcdir}/s6-init" sbin/
    install -m 0750 "${srcdir}/rc.init" etc/s6/
    install -m 0750 "${srcdir}/rc.finish" etc/s6/
    install -m 0750 "${srcdir}/rc.shutdown" etc/s6/

    # Early env vars
    install -d etc/s6/env
    echo 'UTC' >etc/s6/env/TZ

    # crash and finish scripts for s6-svscan
    install -d etc/s6/init-services/.s6-svscan
    install -m 0750 "${srcdir}/s6-svscan-crash" etc/s6/init-services/.s6-svscan/crash
    install -m 0750 "${srcdir}/s6-svscan-finish" etc/s6/init-services/.s6-svscan/finish

    # early tty1 service
    install -d etc/s6/init-services/tty1
    install -m 0754 "${srcdir}/tty1-service" etc/s6/init-services/tty1/run

    # Script and named pipe for catchall logging process
    install -d etc/s6/init-services/s6-svscan-log
    install -m 0750 "${srcdir}/s6-svscan-log" etc/s6/init-services/s6-svscan-log/run
    mkfifo etc/s6/init-services/s6-svscan-log/fifo
    chmod 0600 etc/s6/init-services/s6-svscan-log/fifo

    # Human readable/usable service compatibility layer
    install -m 0754 "${srcdir}/s6-service" sbin/
    install -d bin
    install -m 0755 "${srcdir}/taillog" bin/

    set -o pipefail
    find ${pkgfiles[@]} | cpio -dump "$pkgdir"
}

package_s6-dev() {
    pkgfiles=(
        include
        lib/libs6.a
    )

    cd "${pkgdirbase}/dest"
    set -o pipefail
    find ${pkgfiles[@]} | cpio -dump "$pkgdir"
}
