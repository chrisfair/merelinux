# Maintainer: Jeremy Huntwork <jhuntwork@lightcubesolutions.com>

rationale='This is part of the core toolchain'
pkgname=gcc
pkgver=8.2.0
pkgrel=1
pkgdesc='The GNU Compiler Collection'
arch=('x86_64')
url='http://gcc.gnu.org/'
license=('GPL3')
groups=('base')
depends=()
makedepends=(gmp-dev mpfr-dev mpc-dev zlib-dev)
options=()
changelog=ChangeLog
source=(
    "http://ftp.gnu.org/gnu/gcc/${pkgname}-${pkgver}/${pkgname}-${pkgver}.tar.xz"
)

sha256sums=(
    196c3c04ba2613f893283977e6011b2345d1cd1af9abeac58e916b1aab3e0080
)


build() {
    cd "${srcdir}/${pkgname}-${pkgver}"
    sed -i '/m64=/s@lib64@lib@' gcc/config/i386/t-linux64
    sed -i 's/install_to_$(INSTALL_DEST) //' libiberty/Makefile.in
    sed -i 's,-lgcc_s,--start-group -lgcc_eh -lgcc -lc --end-group,' gcc/gcc.c
    sed -i 's,\./fixinc\.sh,-c true,' gcc/Makefile.in
    sed -i '/define secure_getenv/s@__secure_getenv@getenv@' \
           libmpx/mpxrt/mpxrt-utils.c \
           libvtv/vtv_utils.cc
    sed -i '/__USE_ISOC11/s@!(@(@' libssp/gets-chk.c
    mkdir build
    cd build
    CFLAGS+=' -fPIC' CXXFLAGS+=' -fPIC' \
      ../configure \
      --prefix='' \
      --build=${CHOST} \
      --host=${CHOST} \
      --target=${CHOST} \
      --libexecdir=/lib \
      --mandir=/share/man \
      --enable-libssp \
      --enable-lto \
      --enable-threads=posix \
      --enable-tls \
      --disable-bootstrap \
      --disable-multilib \
      --enable-languages=c,c++ \
      --with-system-zlib
    make
}

package() {
    pkgfiles=(
        bin
        include
        lib
        share/man/man1
    )
    depends=(
        binutils
        gmp
        mpc
        mpfr
        musl-dev
        musl
    )
    cd "${srcdir}/${pkgbase}-${pkgver}/build"
    make DESTDIR="${pkgdirbase}/dest" install
    cd "${pkgdirbase}/dest"
    install -d lib/bfd-plugins
    [ -f lib/gcc/x86_64-pc-linux-musl/${pkgver}/liblto_plugin.so ]
    ln -s ../gcc/x86_64-pc-linux-musl/${pkgver}/liblto_plugin.so lib/bfd-plugins/
    find lib -name "*.so" -maxdepth 1 -delete
    find . -name "*.gch" -delete
    ln -sf ../bin/cpp lib
    ln -sf gcc bin/cc
    set -o pipefail
    find ${pkgfiles[@]} | cpio -dump "$pkgdir"
}
