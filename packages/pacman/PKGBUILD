#!/bin/bash
# shellcheck disable=SC2034,SC2154,SC2068
# Maintainer: Jeremy Huntwork <jhuntwork@lightcubesolutions.com>

rationale='The package manager used for the final system'
pkgname=(pacman pacman-portable pacman-build libalpm-dev)
pkgver=5.1.2
pkgrel=2
pkgdesc='A lightweight Package Manager'
arch=(x86_64)
url='https://www.archlinux.org/pacman/'
license=(GPL2)
groups=(base)
depends=()
makedepends=(
    gettext
    libacl-dev
    libarchive-dev
    libcurl-dev
    liblzma-dev
    libressl-dev
    libtool
    nettle-dev
    zlib-dev
    pkgconf
)
options=()
changelog=ChangeLog

source=(
    "https://projects.archlinux.org/pacman.git/snapshot/pacman-${pkgver}.tar.gz"
    makepkg.conf
    pacman.conf
    pacman-portable.conf
    fakeroot
    dependencies.sh
    std-build-functions.sh
)
sha256sums=(
    bdb4d7461b2358fc94e48e1868fb5c801e4210662ec34a6b97bf3b072030d9a5
    b1a356a9600d4d43ac46021a8c6592aef154ba7ea598182ff430e03638c4bfb5
    a4c69eb1b3be80292ad3dd1a90b4c4e9c24d6b7fb1235622fbfe4510c484494a
    f2c3b003d37c674eb003a69ce389585f14348894de3c5c3bae3f5dd1f96cc1a6
    689b6064bea140990b6655cba26bc8cb16d1590c090688d169e5c3929d12a1e3
    c6ea61331e276f3476282bb2c712f41a00a3de4f786e58aee761c92ee1c10a8a
    ecee87cdc3492de8a01fc45087ef5212c204249f193506a06c56086a23950a3a
)


build() {
    cd "${srcdir}/${pkgbase}-${pkgver}" || return 1
    # shellcheck disable=SC2016
    sed -i -e 's@/usr/bin/@@g' \
       -e 's@/usr/bin\$PATH_SEPARATOR@@g' \
       -e 's@ --apparent-size@@' configure.ac
    sed -i -e '/x-cpio/s@)@|*application/x-empty*)@' \
        -e 's/EUID == 0/EUID == -1/' \
        -e '/warning.*sudo/s@warning.*@true@g' \
        scripts/makepkg.sh.in
    ./autogen.sh
    cp -a "$(pwd)" "${srcdir}/${pkgbase}-${pkgver}-portable"
    CFLAGS='-fPIC' LDFLAGS='-Wl,-static' \
    ./configure \
      --prefix='' \
      --disable-shared \
      --disable-nls \
      --disable-doc
    make V=1 LIBS='-lm -lz -lnettle -lssl -lcrypto -llzma -lacl'
    cd "${srcdir}/${pkgbase}-${pkgver}-portable" || return 1
    CFLAGS='-fPIC' LDFLAGS='-Wl,-static' \
    ./configure \
      --prefix='/mere' \
      --disable-shared \
      --disable-nls \
      --disable-doc
    make V=1 LIBS='-lm -lz -lnettle -lssl -lcrypto -llzma -lacl'
}

package_pacman() {
    backup=(etc/pacman.conf)
    pkgfiles=(
        bin/pacman
        bin/pacman-db-upgrade
        bin/pacman-key
        bin/vercmp
        etc/pacman.conf*
        var
    )

    cd "${srcdir}/${pkgbase}-${pkgver}" || return 1
    make DESTDIR="${pkgdirbase}/dest" install
    cd "${srcdir}/${pkgbase}-${pkgver}-portable" || return 1
    make DESTDIR="${pkgdirbase}/dest-portable" install
    cd "${pkgdirbase}/dest" || return 1
    mv etc/pacman.conf{,.example}
    mv etc/makepkg.conf{,.example}
    install -vm 0644 "${srcdir}/pacman.conf" etc/
    install -vm 0644 "${srcdir}/makepkg.conf" etc/
    install -vm 0755 "${srcdir}/fakeroot" bin/
    install -vm 0755 "${srcdir}/dependencies.sh" share/makepkg/lint_package/
    install -vm 0755 "${srcdir}/std-build-functions.sh" share/makepkg/
    set -o pipefail
    find ${pkgfiles[@]} | cpio -dump "${pkgdir}"
}

package_pacman-portable() {
    backup=(mere/etc/pacman.conf)
    pkgfiles=(
        mere/bin/pacman
        mere/bin/pacman-db-upgrade
        mere/bin/pacman-key
        mere/bin/vercmp
        mere/etc/pacman.conf
        mere/var
    )
    cd "${pkgdirbase}/dest-portable" || return 1
    install -vm 0644 "${srcdir}/pacman-portable.conf" mere/etc/pacman.conf
    set -o pipefail
    find ${pkgfiles[@]} | cpio -dump "${pkgdir}"
}

package_pacman-build() {
    backup=(etc/makepkg.conf)
    pkgfiles=(
        bin/cleanupdelta
        bin/fakeroot
        bin/makepkg
        bin/makepkg-template
        bin/repo-*
        bin/pkgdelta
        bin/testpkg
        etc/makepkg.conf*
        share
    )
    depends=(
        bash
        curl
        file
        libarchive
        libressl
        nettle
        pacman
        xz
    )
    cd "${pkgdirbase}/dest" || return 1
    set -o pipefail
    find ${pkgfiles[@]} | cpio -dump "${pkgdir}"
}

package_libalpm-dev() {
    pkgfiles=(
        include
        lib/libalpm.a
        lib/pkgconfig
    )
    cd "${pkgdirbase}/dest" || return 1
    set -o pipefail
    find ${pkgfiles[@]} | cpio -dump "${pkgdir}"
}
