#!/bin/sh

PATH=/bin:/usr/bin:/sbin:/usr/sbin
export PATH

init=/sbin/init
root=
rootdelay=
rootfstype=auto
ro="ro"
rootflags=
device=

problem() {
	cat <<"EOF"
Encountered a problem!

Dropping you to a shell.

EOF
	sh
}

do_mount_root() {
	mkdir /.root
	[ -n "$rootflags" ] && rootflags="$rootflags,"
	rootflags="$rootflags$ro"
	case "$root" in
	   /dev/*)
		device=$root
		;;
	   UUID=*)
		eval $root
		device="/dev/disk/by-uuid/$UUID"
		;;
	   "")
		echo "No root device specified."
		problem
		;;
	esac
        
        while [ ! -b "$device" ] ; do
            cat <<EOF
The device $device, which is supposed to contain the
root file system, does not exist.
Please fix this problem and exit this shell.

EOF
            problem
        done
        
        if ! mount -n -t "$rootfstype" -o "$rootflags" "$device" /.root ; then
            cat <<EOF
Could not mount device $device
Sleeping forever. Please reboot and fix the kernel command line.

Maybe the device is formatted with an unsupported file system?

Or maybe filesystem type autodetection went wrong, in which case
you should add the rootfstype=... parameter to the kernel command line.

Available partitions:
EOF
            cat /proc/partitions
            while true ; do sleep 10000 ; done
        else
            echo "Successfully mounted device $root"
        fi
}

mount -n -t tmpfs tmpfs /dev
mknod -m 640 /dev/console c 5 1
mknod -m 664 /dev/null c 1 3
mount -n -t proc proc /proc
mount -n -t sysfs sysfs /sys

read -r cmdline </proc/cmdline

for param in $cmdline ; do
	case $param in
	init=*)
		init=${param#init=}
		;;
	root=*)
		root=${param#root=}
		;;
	rootdelay=*)
		rootdelay=${param#rootdelay=}
		;;
	rootfstype=*)
		rootfstype=${param#rootfstype=}
		;;
	rootflags=*)
		rootflags=${param#rootflags=}
		;;
	ro)
		ro="ro"
		;;
	rw)
		ro="rw"
		;;
	esac
done

udevd --daemon --resolve-names=never
udevadm trigger
udevadm settle

if [ -f /etc/mdadm.conf ] ; then mdadm -As ; fi

if [ -n "$rootdelay" ] ; then sleep "$rootdelay" ; fi

do_mount_root

killall /sbin/udevd

exec switch_root /.root "$init" "$@"
